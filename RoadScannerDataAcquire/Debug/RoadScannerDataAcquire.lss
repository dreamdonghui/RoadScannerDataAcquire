
RoadScannerDataAcquire.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003a0  00000000  00000000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000434  20000000  000003a0  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000040  20000434  000007d4  00020434  2**2
                  ALLOC
  3 .stack        00002004  20000474  00000814  00020434  2**0
                  ALLOC
  4 .ARM.attributes 00000028  00000000  00000000  00020434  2**0
                  CONTENTS, READONLY
  5 .comment      00000059  00000000  00000000  0002045c  2**0
                  CONTENTS, READONLY
  6 .debug_info   000006db  00000000  00000000  000204b5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000024e  00000000  00000000  00020b90  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000060  00000000  00000000  00020dde  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000070  00000000  00000000  00020e3e  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000040  00000000  00000000  00020eae  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_macro  00016f4a  00000000  00000000  00020eee  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   000017af  00000000  00000000  00037e38  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0008c4ed  00000000  00000000  000395e7  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  00000250  00000000  00000000  000c5ad4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
   0:	78 24 00 20 21 01 00 00 1d 01 00 00 1d 01 00 00     x$. !...........
	...
  2c:	1d 01 00 00 00 00 00 00 00 00 00 00 1d 01 00 00     ................
  3c:	1d 01 00 00 1d 01 00 00 1d 01 00 00 1d 01 00 00     ................
  4c:	1d 01 00 00 1d 01 00 00 1d 01 00 00 1d 01 00 00     ................
  5c:	1d 01 00 00 1d 01 00 00 1d 01 00 00 1d 01 00 00     ................
  6c:	1d 01 00 00 1d 01 00 00 1d 01 00 00 1d 01 00 00     ................
  7c:	1d 01 00 00 1d 01 00 00 1d 01 00 00 1d 01 00 00     ................
  8c:	1d 01 00 00 1d 01 00 00 1d 01 00 00 1d 01 00 00     ................
  9c:	1d 01 00 00 1d 01 00 00 1d 01 00 00 1d 01 00 00     ................
  ac:	1d 01 00 00 1d 01 00 00 1d 01 00 00 1d 01 00 00     ................

000000bc <__do_global_dtors_aux>:
  bc:	b510      	push	{r4, lr}
  be:	4c06      	ldr	r4, [pc, #24]	; (d8 <__do_global_dtors_aux+0x1c>)
  c0:	7823      	ldrb	r3, [r4, #0]
  c2:	2b00      	cmp	r3, #0
  c4:	d107      	bne.n	d6 <__do_global_dtors_aux+0x1a>
  c6:	4b05      	ldr	r3, [pc, #20]	; (dc <__do_global_dtors_aux+0x20>)
  c8:	2b00      	cmp	r3, #0
  ca:	d002      	beq.n	d2 <__do_global_dtors_aux+0x16>
  cc:	4804      	ldr	r0, [pc, #16]	; (e0 <__do_global_dtors_aux+0x24>)
  ce:	e000      	b.n	d2 <__do_global_dtors_aux+0x16>
  d0:	bf00      	nop
  d2:	2301      	movs	r3, #1
  d4:	7023      	strb	r3, [r4, #0]
  d6:	bd10      	pop	{r4, pc}
  d8:	20000434 	.word	0x20000434
  dc:	00000000 	.word	0x00000000
  e0:	000003a0 	.word	0x000003a0

000000e4 <frame_dummy>:
  e4:	4b08      	ldr	r3, [pc, #32]	; (108 <frame_dummy+0x24>)
  e6:	b510      	push	{r4, lr}
  e8:	2b00      	cmp	r3, #0
  ea:	d003      	beq.n	f4 <frame_dummy+0x10>
  ec:	4907      	ldr	r1, [pc, #28]	; (10c <frame_dummy+0x28>)
  ee:	4808      	ldr	r0, [pc, #32]	; (110 <frame_dummy+0x2c>)
  f0:	e000      	b.n	f4 <frame_dummy+0x10>
  f2:	bf00      	nop
  f4:	4807      	ldr	r0, [pc, #28]	; (114 <frame_dummy+0x30>)
  f6:	6803      	ldr	r3, [r0, #0]
  f8:	2b00      	cmp	r3, #0
  fa:	d100      	bne.n	fe <frame_dummy+0x1a>
  fc:	bd10      	pop	{r4, pc}
  fe:	4b06      	ldr	r3, [pc, #24]	; (118 <frame_dummy+0x34>)
 100:	2b00      	cmp	r3, #0
 102:	d0fb      	beq.n	fc <frame_dummy+0x18>
 104:	4798      	blx	r3
 106:	e7f9      	b.n	fc <frame_dummy+0x18>
 108:	00000000 	.word	0x00000000
 10c:	20000438 	.word	0x20000438
 110:	000003a0 	.word	0x000003a0
 114:	000003a0 	.word	0x000003a0
 118:	00000000 	.word	0x00000000

0000011c <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
 11c:	e7fe      	b.n	11c <Dummy_Handler>
	...

00000120 <Reset_Handler>:
{
 120:	b510      	push	{r4, lr}
        if (pSrc != pDest) {
 122:	4a17      	ldr	r2, [pc, #92]	; (180 <Reset_Handler+0x60>)
 124:	4b17      	ldr	r3, [pc, #92]	; (184 <Reset_Handler+0x64>)
 126:	429a      	cmp	r2, r3
 128:	d011      	beq.n	14e <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
 12a:	001a      	movs	r2, r3
 12c:	4b16      	ldr	r3, [pc, #88]	; (188 <Reset_Handler+0x68>)
 12e:	429a      	cmp	r2, r3
 130:	d20d      	bcs.n	14e <Reset_Handler+0x2e>
 132:	4a16      	ldr	r2, [pc, #88]	; (18c <Reset_Handler+0x6c>)
 134:	3303      	adds	r3, #3
 136:	1a9b      	subs	r3, r3, r2
 138:	089b      	lsrs	r3, r3, #2
 13a:	3301      	adds	r3, #1
 13c:	009b      	lsls	r3, r3, #2
 13e:	2200      	movs	r2, #0
                        *pDest++ = *pSrc++;
 140:	4810      	ldr	r0, [pc, #64]	; (184 <Reset_Handler+0x64>)
 142:	490f      	ldr	r1, [pc, #60]	; (180 <Reset_Handler+0x60>)
 144:	588c      	ldr	r4, [r1, r2]
 146:	5084      	str	r4, [r0, r2]
 148:	3204      	adds	r2, #4
                for (; pDest < &_erelocate;) {
 14a:	429a      	cmp	r2, r3
 14c:	d1fa      	bne.n	144 <Reset_Handler+0x24>
        for (pDest = &_szero; pDest < &_ezero;) {
 14e:	4a10      	ldr	r2, [pc, #64]	; (190 <Reset_Handler+0x70>)
 150:	4b10      	ldr	r3, [pc, #64]	; (194 <Reset_Handler+0x74>)
 152:	429a      	cmp	r2, r3
 154:	d20a      	bcs.n	16c <Reset_Handler+0x4c>
 156:	43d3      	mvns	r3, r2
 158:	490e      	ldr	r1, [pc, #56]	; (194 <Reset_Handler+0x74>)
 15a:	185b      	adds	r3, r3, r1
 15c:	2103      	movs	r1, #3
 15e:	438b      	bics	r3, r1
 160:	3304      	adds	r3, #4
 162:	189b      	adds	r3, r3, r2
                *pDest++ = 0;
 164:	2100      	movs	r1, #0
 166:	c202      	stmia	r2!, {r1}
        for (pDest = &_szero; pDest < &_ezero;) {
 168:	4293      	cmp	r3, r2
 16a:	d1fc      	bne.n	166 <Reset_Handler+0x46>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
 16c:	4a0a      	ldr	r2, [pc, #40]	; (198 <Reset_Handler+0x78>)
 16e:	21ff      	movs	r1, #255	; 0xff
 170:	4b0a      	ldr	r3, [pc, #40]	; (19c <Reset_Handler+0x7c>)
 172:	438b      	bics	r3, r1
 174:	6093      	str	r3, [r2, #8]
        __libc_init_array();
 176:	4b0a      	ldr	r3, [pc, #40]	; (1a0 <Reset_Handler+0x80>)
 178:	4798      	blx	r3
        main();
 17a:	4b0a      	ldr	r3, [pc, #40]	; (1a4 <Reset_Handler+0x84>)
 17c:	4798      	blx	r3
 17e:	e7fe      	b.n	17e <Reset_Handler+0x5e>
 180:	000003a0 	.word	0x000003a0
 184:	20000000 	.word	0x20000000
 188:	20000434 	.word	0x20000434
 18c:	20000004 	.word	0x20000004
 190:	20000434 	.word	0x20000434
 194:	20000474 	.word	0x20000474
 198:	e000ed00 	.word	0xe000ed00
 19c:	00000000 	.word	0x00000000
 1a0:	000001d9 	.word	0x000001d9
 1a4:	000001b9 	.word	0x000001b9

000001a8 <SystemInit>:
 *         Initialize the System and update the SystemCoreClock variable.
 */
void SystemInit(void)
{
        // Keep the default device state after reset
        SystemCoreClock = __SYSTEM_CLOCK;
 1a8:	4a01      	ldr	r2, [pc, #4]	; (1b0 <SystemInit+0x8>)
 1aa:	4b02      	ldr	r3, [pc, #8]	; (1b4 <SystemInit+0xc>)
 1ac:	601a      	str	r2, [r3, #0]
        return;
}
 1ae:	4770      	bx	lr
 1b0:	003d0900 	.word	0x003d0900
 1b4:	20000000 	.word	0x20000000

000001b8 <main>:

/** LOCAL PROTOTYPES **********************************************************/


int main(void)
{
 1b8:	b510      	push	{r4, lr}
    /* Initialize the SAM system */
    SystemInit();
 1ba:	4b04      	ldr	r3, [pc, #16]	; (1cc <main+0x14>)
 1bc:	4798      	blx	r3
		/* Application hardware and software initialization */

    /* Replace with your application code */
	REG_PORT_DIRSET2 = 0xffffffff;
 1be:	2301      	movs	r3, #1
 1c0:	425b      	negs	r3, r3
 1c2:	4a03      	ldr	r2, [pc, #12]	; (1d0 <main+0x18>)
 1c4:	6013      	str	r3, [r2, #0]
	REG_PORT_OUTCLR2 = 0xffffffff;
 1c6:	4a03      	ldr	r2, [pc, #12]	; (1d4 <main+0x1c>)
 1c8:	6013      	str	r3, [r2, #0]
 1ca:	e7fe      	b.n	1ca <main+0x12>
 1cc:	000001a9 	.word	0x000001a9
 1d0:	41000108 	.word	0x41000108
 1d4:	41000114 	.word	0x41000114

000001d8 <__libc_init_array>:
 1d8:	b570      	push	{r4, r5, r6, lr}
 1da:	4e0d      	ldr	r6, [pc, #52]	; (210 <__libc_init_array+0x38>)
 1dc:	4d0d      	ldr	r5, [pc, #52]	; (214 <__libc_init_array+0x3c>)
 1de:	2400      	movs	r4, #0
 1e0:	1bad      	subs	r5, r5, r6
 1e2:	10ad      	asrs	r5, r5, #2
 1e4:	d005      	beq.n	1f2 <__libc_init_array+0x1a>
 1e6:	00a3      	lsls	r3, r4, #2
 1e8:	58f3      	ldr	r3, [r6, r3]
 1ea:	3401      	adds	r4, #1
 1ec:	4798      	blx	r3
 1ee:	42a5      	cmp	r5, r4
 1f0:	d1f9      	bne.n	1e6 <__libc_init_array+0xe>
 1f2:	f000 f8c3 	bl	37c <_init>
 1f6:	4e08      	ldr	r6, [pc, #32]	; (218 <__libc_init_array+0x40>)
 1f8:	4d08      	ldr	r5, [pc, #32]	; (21c <__libc_init_array+0x44>)
 1fa:	2400      	movs	r4, #0
 1fc:	1bad      	subs	r5, r5, r6
 1fe:	10ad      	asrs	r5, r5, #2
 200:	d005      	beq.n	20e <__libc_init_array+0x36>
 202:	00a3      	lsls	r3, r4, #2
 204:	58f3      	ldr	r3, [r6, r3]
 206:	3401      	adds	r4, #1
 208:	4798      	blx	r3
 20a:	42a5      	cmp	r5, r4
 20c:	d1f9      	bne.n	202 <__libc_init_array+0x2a>
 20e:	bd70      	pop	{r4, r5, r6, pc}
 210:	00000388 	.word	0x00000388
 214:	00000388 	.word	0x00000388
 218:	00000388 	.word	0x00000388
 21c:	00000390 	.word	0x00000390

00000220 <register_fini>:
 220:	4b03      	ldr	r3, [pc, #12]	; (230 <register_fini+0x10>)
 222:	b510      	push	{r4, lr}
 224:	2b00      	cmp	r3, #0
 226:	d002      	beq.n	22e <register_fini+0xe>
 228:	4802      	ldr	r0, [pc, #8]	; (234 <register_fini+0x14>)
 22a:	f000 f805 	bl	238 <atexit>
 22e:	bd10      	pop	{r4, pc}
 230:	00000000 	.word	0x00000000
 234:	00000249 	.word	0x00000249

00000238 <atexit>:
 238:	b510      	push	{r4, lr}
 23a:	0001      	movs	r1, r0
 23c:	2300      	movs	r3, #0
 23e:	2200      	movs	r2, #0
 240:	2000      	movs	r0, #0
 242:	f000 f81f 	bl	284 <__register_exitproc>
 246:	bd10      	pop	{r4, pc}

00000248 <__libc_fini_array>:
 248:	b570      	push	{r4, r5, r6, lr}
 24a:	4b09      	ldr	r3, [pc, #36]	; (270 <__libc_fini_array+0x28>)
 24c:	4c09      	ldr	r4, [pc, #36]	; (274 <__libc_fini_array+0x2c>)
 24e:	1ae4      	subs	r4, r4, r3
 250:	10a4      	asrs	r4, r4, #2
 252:	d009      	beq.n	268 <__libc_fini_array+0x20>
 254:	4a08      	ldr	r2, [pc, #32]	; (278 <__libc_fini_array+0x30>)
 256:	18a5      	adds	r5, r4, r2
 258:	00ad      	lsls	r5, r5, #2
 25a:	18ed      	adds	r5, r5, r3
 25c:	682b      	ldr	r3, [r5, #0]
 25e:	3c01      	subs	r4, #1
 260:	4798      	blx	r3
 262:	3d04      	subs	r5, #4
 264:	2c00      	cmp	r4, #0
 266:	d1f9      	bne.n	25c <__libc_fini_array+0x14>
 268:	f000 f892 	bl	390 <_fini>
 26c:	bd70      	pop	{r4, r5, r6, pc}
 26e:	46c0      	nop			; (mov r8, r8)
 270:	0000039c 	.word	0x0000039c
 274:	000003a0 	.word	0x000003a0
 278:	3fffffff 	.word	0x3fffffff

0000027c <__retarget_lock_acquire_recursive>:
 27c:	4770      	bx	lr
 27e:	46c0      	nop			; (mov r8, r8)

00000280 <__retarget_lock_release_recursive>:
 280:	4770      	bx	lr
 282:	46c0      	nop			; (mov r8, r8)

00000284 <__register_exitproc>:
 284:	b5f0      	push	{r4, r5, r6, r7, lr}
 286:	464e      	mov	r6, r9
 288:	4645      	mov	r5, r8
 28a:	46de      	mov	lr, fp
 28c:	4657      	mov	r7, sl
 28e:	b5e0      	push	{r5, r6, r7, lr}
 290:	4d36      	ldr	r5, [pc, #216]	; (36c <__register_exitproc+0xe8>)
 292:	b083      	sub	sp, #12
 294:	0006      	movs	r6, r0
 296:	6828      	ldr	r0, [r5, #0]
 298:	4698      	mov	r8, r3
 29a:	000f      	movs	r7, r1
 29c:	4691      	mov	r9, r2
 29e:	f7ff ffed 	bl	27c <__retarget_lock_acquire_recursive>
 2a2:	4b33      	ldr	r3, [pc, #204]	; (370 <__register_exitproc+0xec>)
 2a4:	681c      	ldr	r4, [r3, #0]
 2a6:	23a4      	movs	r3, #164	; 0xa4
 2a8:	005b      	lsls	r3, r3, #1
 2aa:	58e0      	ldr	r0, [r4, r3]
 2ac:	2800      	cmp	r0, #0
 2ae:	d052      	beq.n	356 <__register_exitproc+0xd2>
 2b0:	6843      	ldr	r3, [r0, #4]
 2b2:	2b1f      	cmp	r3, #31
 2b4:	dc13      	bgt.n	2de <__register_exitproc+0x5a>
 2b6:	1c5a      	adds	r2, r3, #1
 2b8:	9201      	str	r2, [sp, #4]
 2ba:	2e00      	cmp	r6, #0
 2bc:	d128      	bne.n	310 <__register_exitproc+0x8c>
 2be:	9a01      	ldr	r2, [sp, #4]
 2c0:	3302      	adds	r3, #2
 2c2:	009b      	lsls	r3, r3, #2
 2c4:	6042      	str	r2, [r0, #4]
 2c6:	501f      	str	r7, [r3, r0]
 2c8:	6828      	ldr	r0, [r5, #0]
 2ca:	f7ff ffd9 	bl	280 <__retarget_lock_release_recursive>
 2ce:	2000      	movs	r0, #0
 2d0:	b003      	add	sp, #12
 2d2:	bc3c      	pop	{r2, r3, r4, r5}
 2d4:	4690      	mov	r8, r2
 2d6:	4699      	mov	r9, r3
 2d8:	46a2      	mov	sl, r4
 2da:	46ab      	mov	fp, r5
 2dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 2de:	4b25      	ldr	r3, [pc, #148]	; (374 <__register_exitproc+0xf0>)
 2e0:	2b00      	cmp	r3, #0
 2e2:	d03d      	beq.n	360 <__register_exitproc+0xdc>
 2e4:	20c8      	movs	r0, #200	; 0xc8
 2e6:	0040      	lsls	r0, r0, #1
 2e8:	e000      	b.n	2ec <__register_exitproc+0x68>
 2ea:	bf00      	nop
 2ec:	2800      	cmp	r0, #0
 2ee:	d037      	beq.n	360 <__register_exitproc+0xdc>
 2f0:	22a4      	movs	r2, #164	; 0xa4
 2f2:	2300      	movs	r3, #0
 2f4:	0052      	lsls	r2, r2, #1
 2f6:	58a1      	ldr	r1, [r4, r2]
 2f8:	6043      	str	r3, [r0, #4]
 2fa:	6001      	str	r1, [r0, #0]
 2fc:	50a0      	str	r0, [r4, r2]
 2fe:	3240      	adds	r2, #64	; 0x40
 300:	5083      	str	r3, [r0, r2]
 302:	3204      	adds	r2, #4
 304:	5083      	str	r3, [r0, r2]
 306:	3301      	adds	r3, #1
 308:	9301      	str	r3, [sp, #4]
 30a:	2300      	movs	r3, #0
 30c:	2e00      	cmp	r6, #0
 30e:	d0d6      	beq.n	2be <__register_exitproc+0x3a>
 310:	009a      	lsls	r2, r3, #2
 312:	4692      	mov	sl, r2
 314:	4482      	add	sl, r0
 316:	464a      	mov	r2, r9
 318:	2188      	movs	r1, #136	; 0x88
 31a:	4654      	mov	r4, sl
 31c:	5062      	str	r2, [r4, r1]
 31e:	22c4      	movs	r2, #196	; 0xc4
 320:	0052      	lsls	r2, r2, #1
 322:	4691      	mov	r9, r2
 324:	4481      	add	r9, r0
 326:	464a      	mov	r2, r9
 328:	3987      	subs	r1, #135	; 0x87
 32a:	4099      	lsls	r1, r3
 32c:	6812      	ldr	r2, [r2, #0]
 32e:	468b      	mov	fp, r1
 330:	430a      	orrs	r2, r1
 332:	4694      	mov	ip, r2
 334:	464a      	mov	r2, r9
 336:	4661      	mov	r1, ip
 338:	6011      	str	r1, [r2, #0]
 33a:	2284      	movs	r2, #132	; 0x84
 33c:	4641      	mov	r1, r8
 33e:	0052      	lsls	r2, r2, #1
 340:	50a1      	str	r1, [r4, r2]
 342:	2e02      	cmp	r6, #2
 344:	d1bb      	bne.n	2be <__register_exitproc+0x3a>
 346:	0002      	movs	r2, r0
 348:	465c      	mov	r4, fp
 34a:	328d      	adds	r2, #141	; 0x8d
 34c:	32ff      	adds	r2, #255	; 0xff
 34e:	6811      	ldr	r1, [r2, #0]
 350:	430c      	orrs	r4, r1
 352:	6014      	str	r4, [r2, #0]
 354:	e7b3      	b.n	2be <__register_exitproc+0x3a>
 356:	0020      	movs	r0, r4
 358:	304d      	adds	r0, #77	; 0x4d
 35a:	30ff      	adds	r0, #255	; 0xff
 35c:	50e0      	str	r0, [r4, r3]
 35e:	e7a7      	b.n	2b0 <__register_exitproc+0x2c>
 360:	6828      	ldr	r0, [r5, #0]
 362:	f7ff ff8d 	bl	280 <__retarget_lock_release_recursive>
 366:	2001      	movs	r0, #1
 368:	4240      	negs	r0, r0
 36a:	e7b1      	b.n	2d0 <__register_exitproc+0x4c>
 36c:	20000430 	.word	0x20000430
 370:	00000378 	.word	0x00000378
 374:	00000000 	.word	0x00000000

00000378 <_global_impure_ptr>:
 378:	20000008                                ... 

0000037c <_init>:
 37c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 37e:	46c0      	nop			; (mov r8, r8)
 380:	bcf8      	pop	{r3, r4, r5, r6, r7}
 382:	bc08      	pop	{r3}
 384:	469e      	mov	lr, r3
 386:	4770      	bx	lr

00000388 <__init_array_start>:
 388:	00000221 	.word	0x00000221

0000038c <__frame_dummy_init_array_entry>:
 38c:	000000e5                                ....

00000390 <_fini>:
 390:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 392:	46c0      	nop			; (mov r8, r8)
 394:	bcf8      	pop	{r3, r4, r5, r6, r7}
 396:	bc08      	pop	{r3}
 398:	469e      	mov	lr, r3
 39a:	4770      	bx	lr

0000039c <__fini_array_start>:
 39c:	000000bd 	.word	0x000000bd
